--**CASE**
--Example 1: General CASE
SELECT customer_id, 
CASE
	WHEN (customer_id <= 100) THEN 'Premium'
	WHEN (customer_id BETWEEN 100 AND 200) THEN 'Plus'
	ELSE 'Normal'
END AS customer_class
FROM customer;

--Example 2: CASE expression
SELECT customer_id, 
CASE customer_id
	WHEN 2 THEN 'Winner'
	WHEN 5 THEN 'Second place'
	ELSE 'Normal'
END AS raffle_results
FROM customer;

--Example 3: to operate different categories of values
SELECT
SUM(CASE rental_rate
	WHEN 0.99 THEN 1
	ELSE 0
END) AS bargains,

SUM(CASE rental_rate
	WHEN 2.99 THEN 1
	ELSE 0
END) AS regular,

SUM(CASE rental_rate
	WHEN 4.99 THEN 1
	ELSE 0
END) AS premium
FROM film;

-- CHALLENGES: count the amount of movies per category
SELECT
SUM(CASE rating
	WHEN 'R' THEN 1
	ELSE 0
END) AS r,

SUM(CASE rating
	WHEN 'PG' THEN 1
	ELSE 0
END) AS pg,

SUM(CASE rating
	WHEN 'PG-13' THEN 1
	ELSE 0
END) AS pg13
FROM film;

--**CAST**
SELECT CHAR_LENGTH(CAST(inventory_id AS VARCHAR))
AS inventory_id_char
FROM rental;

--**NULLIF**
--creating the table
CREATE TABLE depts(
	first_name VARCHAR(50),
	department VARCHAR(50)
)

-- input values
INSERT INTO depts(
	first_name,
	department
)
VALUES
('Vinton', 'A'),
('Lauren', 'A'),
('Claire', 'B')

--checking department ratio
SELECT(
SUM (CASE 
	WHEN department = 'A' THEN 1
	ELSE 0
	END) /
SUM (CASE 
	WHEN department = 'B' THEN 1
	ELSE 0
	END)
	) AS ab_dep_ratio
	FROM depts;
  
-- deleting
DELETE FROM depts
WHERE department = 'B'

--using nullif
SELECT(
SUM (CASE 
	WHEN department = 'A' THEN 1
	ELSE 0
	END) / NULLIF(SUM (CASE 
	WHEN department = 'B' THEN 1
	ELSE 0
	END),0)
	) AS ab_dep_ratio
	FROM depts;
  
  --**Views**
--Creating the view
CREATE VIEW customer_info AS --creates a view from the code below
SELECT first_name,last_name,address
FROM customer
INNER JOIN address
ON customer.address_id = address.address_id;

--Calling the view
SELECT * FROM customer_info;

--To modify the view
CREATE OR REPLACE VIEW customer_info AS --creates a view from the code below
SELECT first_name,last_name,address,district
FROM customer
INNER JOIN address
ON customer.address_id = address.address_id;

--To delete the view
DROP VIEW customer_info;

--To rename the view
ALTER VIEW customer_info RENAME TO c_info;


